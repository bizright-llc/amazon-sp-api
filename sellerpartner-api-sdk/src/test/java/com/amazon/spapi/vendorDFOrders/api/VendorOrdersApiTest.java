/*
 * Selling Partner API for Direct Fulfillment Orders
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.vendorDFOrders.api;

import com.amazon.SellingPartnerAPIAA.LWAAuthorizationCredentials;
import com.amazon.SellingPartnerAPIAA.LWAException;
import com.amazon.spapi.ApiException;
import com.amazon.spapi.vendorDFOrders.model.GetOrderResponse;
import com.amazon.spapi.vendorDFOrders.model.GetOrdersResponse;
import com.amazon.spapi.vendorDFOrders.model.SubmitAcknowledgementRequest;
import com.amazon.spapi.vendorDFOrders.model.SubmitAcknowledgementResponse;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.threeten.bp.OffsetDateTime;

/**
* API tests for VendorOrdersApi
*/
@Ignore
public class VendorOrdersApiTest {



    private VendorOrdersApi api = null;


/**
* 
*
* Returns purchase order information for the purchaseOrderNumber that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getOrderTest() throws ApiException, LWAException {
    String purchaseOrderNumber = null;
GetOrderResponse response = api.getOrder(purchaseOrderNumber);

// TODO: test validations
}

/**
* 
*
* Returns a list of purchase orders created during the time frame that you specify. You define the time frame using the createdAfter and createdBefore parameters. You must use both parameters. You can choose to get only the purchase order numbers by setting the includeDetails parameter to false. In that case, the operation returns a list of purchase order numbers. You can then call the getOrder operation to return the details of a specific order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getOrdersTest() throws ApiException, LWAException {
    OffsetDateTime createdAfter = null;
    OffsetDateTime createdBefore = null;
    String shipFromPartyId = null;
    String status = null;
    Long limit = null;
    String sortOrder = null;
    String nextToken = null;
    String includeDetails = null;
GetOrdersResponse response = api.getOrders(createdAfter, createdBefore, shipFromPartyId, status, limit, sortOrder, nextToken, includeDetails);

// TODO: test validations
}

/**
* 
*
* Submits acknowledgements for one or more purchase orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void submitAcknowledgementTest() throws ApiException, LWAException {
    SubmitAcknowledgementRequest body = null;
SubmitAcknowledgementResponse response = api.submitAcknowledgement(body);

// TODO: test validations
}

}