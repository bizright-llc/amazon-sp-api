/*
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools. The Orders API supports orders that are two years old or less. Orders more than two years old will not show in the API response.  **Note:** The Orders API supports orders from 2016 and after for the JP, AU, and SG marketplaces.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.sellerOrders.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * An item associated with an order item. For example, a tire installation service purchased with tires.
 */
@ApiModel(description = "An item associated with an order item. For example, a tire installation service purchased with tires.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-06-07T14:29:58.712+08:00")
public class AssociatedItem {
  @SerializedName("OrderId")
  private String orderId = null;

  @SerializedName("OrderItemId")
  private String orderItemId = null;

  @SerializedName("AssociationType")
  private AssociationType associationType = null;

  public AssociatedItem orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * The order item&#39;s order identifier, in 3-7-7 format.
   * @return orderId
  **/
  @ApiModelProperty(value = "The order item's order identifier, in 3-7-7 format.")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public AssociatedItem orderItemId(String orderItemId) {
    this.orderItemId = orderItemId;
    return this;
  }

   /**
   * An Amazon-defined item identifier for the associated item.
   * @return orderItemId
  **/
  @ApiModelProperty(value = "An Amazon-defined item identifier for the associated item.")
  public String getOrderItemId() {
    return orderItemId;
  }

  public void setOrderItemId(String orderItemId) {
    this.orderItemId = orderItemId;
  }

  public AssociatedItem associationType(AssociationType associationType) {
    this.associationType = associationType;
    return this;
  }

   /**
   * Get associationType
   * @return associationType
  **/
  @ApiModelProperty(value = "")
  public AssociationType getAssociationType() {
    return associationType;
  }

  public void setAssociationType(AssociationType associationType) {
    this.associationType = associationType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociatedItem associatedItem = (AssociatedItem) o;
    return Objects.equals(this.orderId, associatedItem.orderId) &&
        Objects.equals(this.orderItemId, associatedItem.orderItemId) &&
        Objects.equals(this.associationType, associatedItem.associationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, orderItemId, associationType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociatedItem {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
    sb.append("    associationType: ").append(toIndentedString(associationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

